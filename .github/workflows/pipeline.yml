name: kanban-grupo4

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: LoginDocker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Install dependencies
        run: npm install

      - name: Build application
        run: npm run build

      - name: Build docker image
        run: |
          docker build -t dipaz/kanban-dashboard:latest .
          docker tag dipaz/kanban-dashboard:latest dipaz/kanban-dashboard:$(date +'%Y%m%d%H%M%S')
      - name: Push docker image
        run: docker push dipaz/kanban-dashboard
    

  deploy-to-prod:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - uses: actions/checkout@v2
      - name: Deploy to AWS
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Update EKS
        run: |
          aws eks update-kubeconfig --name eks-grupo0 --alias eks-grupo4 --region ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Apply deploy EKS
        run: |
          kubectl delete deployments kanban-grupo4 -n grupo4
          kubectl apply -f ./k8s/deployment.yml -n grupo4
      - name: Apply service EKS
        run: |
          kubectl delete service kanban-grupo4 -n grupo4
          kubectl apply -f ./k8s/service.yml -n grupo4



